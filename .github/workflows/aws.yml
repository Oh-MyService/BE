name: Deploy FastAPI to Amazon Lightsail

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  LIGHTSAIL_INSTANCE_IP: ${{ secrets.LIGHTSAIL_INSTANCE_IP }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose on GitHub Action runner
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push image to Amazon ECR Public
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push

    - name: Deploy to Lightsail
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        # SSH 옵션 추가하여 호스트 키 검증 비활성화
        ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USERNAME@$LIGHTSAIL_INSTANCE_IP << 'EOF'
          # docker-compose 설치
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose -f /home/ubuntu/myproject/docker-compose.yml pull
          docker-compose -f /home/ubuntu/myproject/docker-compose.yml up -d --build
        EOF
      env:
        AWS_REGION: us-east-1
        LIGHTSAIL_INSTANCE_IP: ${{ secrets.LIGHTSAIL_INSTANCE_IP }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      shell: /usr/bin/bash -e {0}
